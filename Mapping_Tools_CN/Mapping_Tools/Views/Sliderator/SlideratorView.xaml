<local:SingleRunMappingTool x:Class="Mapping_Tools.Views.Sliderator.SlideratorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Mapping_Tools.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:graph="clr-namespace:Mapping_Tools.Components.Graph"
             xmlns:domain="clr-namespace:Mapping_Tools.Components.Domain"
             xmlns:objectVisualiser="clr-namespace:Mapping_Tools.Components.ObjectVisualiser"
             mc:Ignorable="d" 
             x:Name="This"
             Loaded="SlideratorView_OnLoaded"
             d:DesignHeight="450" Width="759.5" d:DataContext="{d:DesignData SlideratorVm}">
    <local:SingleRunMappingTool.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
        <domain:DoubleToStringConverter x:Key="DoubleToStringConverter"/>
        <domain:TimeToStringConverter x:Key="TimeToStringConverter"/>
        <domain:MultiValueConverterGroup x:Key="BooleanInvertToVisibilityConverter">
            <domain:BooleanInvertConverter/>
            <domain:BooleanToVisibilityConverter/>
        </domain:MultiValueConverterGroup>
        <domain:MultiValueConverterGroup x:Key="BooleanAOrNotBConverter">
            <domain:IdentityConverter/>
            <domain:BooleanInvertConverter/>
            <domain:BooleanOrConverter/>
        </domain:MultiValueConverterGroup>
        <domain:MultiValueConverterGroup x:Key="BooleanAAndNotBConverter">
            <domain:IdentityConverter/>
            <domain:BooleanInvertConverter/>
            <domain:BooleanAndConverter/>
        </domain:MultiValueConverterGroup>
        <domain:BooleanInvertConverter x:Key="BooleanInvertConverter"/>
    </local:SingleRunMappingTool.Resources>
    <Grid Name="MasterGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <TextBlock FontSize="32" FontWeight="Bold" Foreground="{DynamicResource PrimaryHueMidBrush}">
                <Run Text="滑条变速器（Sliderator）"/>
            </TextBlock>
            <materialDesign:PopupBox Margin="10" VerticalAlignment="Bottom" ToolTip="点我！">
                <materialDesign:PopupBox.ToggleContent>
                    <materialDesign:PackIcon Kind="HelpCircle" Width="24" Height="24" Foreground="{DynamicResource SecondaryHueMidBrush}"/>
                </materialDesign:PopupBox.ToggleContent>
                <TextBlock TextWrapping="Wrap" MaxWidth="600" Padding="5">
                    滑条变速器可以让滑条速度随时间变化，也可以用来生成变距连打。
                    <LineBreak/>
                    <LineBreak/>
                    工具界面由滑条导入区、选项区、位置/速度图和预览图组成。
                    <LineBreak/>
                    <LineBreak/>
                    若要开始，请从下拉菜单中选择导入方式，点击“导入滑条”按钮导入一个或多个滑条。
                    <LineBreak/>
                    <LineBreak/>
                    最关键的是位置/速度图，它决定了滑条如何动作。点击曲线图下方的绿色按钮可以切换曲线图模式。
                    <LineBreak/>
                    用右键添加、删除和编辑锚点，用左键拖拽锚点。当拖拽时，按住Shift仅水平移动，按住Ctrl仅竖直移动，按住Alt不再吸附网格。
                    <LineBreak/>
                    <LineBreak/>
                    使用恒定速度运行工具会生成原始滑条。调低SV、调高堆积块长度可以优化滑条，解决卡顿问题。
                    <LineBreak/>
                    <LineBreak/>
                    将鼠标停靠至详细工具上以获取更多信息。
                </TextBlock>
            </materialDesign:PopupBox>
            <materialDesign:PopupBox Margin="0,10,10,10" VerticalAlignment="Bottom" ToolTip="点我！">
                <materialDesign:PopupBox.ToggleContent>
                    <materialDesign:PackIcon Kind="LightningBoltCircle" Width="24" Height="24" Foreground="{DynamicResource PrimaryHueLightBrush}"/>
                </materialDesign:PopupBox.ToggleContent>
                <TextBlock TextWrapping="Wrap" MaxWidth="600" Padding="5">
                    此工具兼容快速执行（QuickRun）！
                </TextBlock>
            </materialDesign:PopupBox>
        </StackPanel>

        <Grid Name="FirstGrid" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="200"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="90"/>
            </Grid.ColumnDefinitions>

            <graph:Graph Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" x:Name="Graph" MinMarkerSpacing="20"
                         Margin="43 0 0 43" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                         MaxX="{Binding GraphBeats, Mode=TwoWay}"/>

            <materialDesign:Card Grid.Column="2" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0" Padding="10"
                                 ToolTip="生成预览">
                <objectVisualiser:HitObjectElement x:Name="GraphHitObjectElement" Width="200" HitObject="{Binding VisibleHitObject}"
                                                   Stroke="YellowGreen" Fill="DarkSlateGray" SliderBallStroke="White" Thickness="50"/>
            </materialDesign:Card>

            <ScrollViewer Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Margin="0 10 0 0" VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ComboBox Grid.Column="0" ItemsSource="{Binding ImportModes}" SelectedItem="{Binding ImportModeSetting}" Margin="0 0 5 0"
                                  ToolTip="导入模式"/>

                        <TextBox Grid.Column="1" Text="{Binding TimeCode}" Visibility="{Binding TimeCodeBoxVisibility}" Margin="5 0 5 2" Width="100"
                                 materialDesign:HintAssist.Hint="时间码"
                                 ToolTip="在此处输入时间码。例如：00:56:823 (1,2,1,2) - "/>

                        <Button Grid.Column="2" Style="{StaticResource MaterialDesignRaisedButton}" Command="{Binding ImportCommand}" Margin="5 0 0 0"
                                ToolTip="将滑条导入预览" HorizontalAlignment="Right" VerticalAlignment="Top">
                            导入滑条
                        </Button>
                    </Grid>
                    <Grid Margin="0 10 0 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="{Binding LoadedHitObjects.Count, StringFormat={}加载了 {0} 个滑条}"/>

                        <StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
                            <Button Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" Margin="0 0 5 0"
                                    Command="{Binding MoveLeftCommand}"
                                    ToolTip="切换到上一个滑条。同时按下 Shift 在切换前快速执行。">
                                <Button.Content>
                                    <materialDesign:PackIcon Kind="KeyboardArrowLeft" Width="24" Height="24"/>
                                </Button.Content>
                            </Button>
                            <Button Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                    Command="{Binding MoveRightCommand}"
                                    ToolTip="切换到下一个滑条。同时按下 Shift 在切换前快速执行。">
                                <Button.Content>
                                    <materialDesign:PackIcon Kind="KeyboardArrowRight" Width="24" Height="24"/>
                                </Button.Content>
                            </Button>
                        </StackPanel>
                    </Grid>
                    <Grid Margin="0 10 0 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBox Grid.Column="0" Margin="0 0 10 0" materialDesign:HintAssist.Hint="节拍数" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                 ToolTip="滑条长度对应的节拍数。">
                            <TextBox.Text>
                                <Binding Path="GraphBeats" Mode="TwoWay" UpdateSourceTrigger="LostFocus"  NotifyOnValidationError="True">
                                    <Binding.Converter>
                                        <domain:DoubleToStringConverter/>
                                    </Binding.Converter>
                                    <Binding.ValidationRules>
                                        <domain:IsLessOrEqualValidationRule>
                                            <domain:IsLessOrEqualValidationRule.ValueWrapper>
                                                <domain:DoubleWrapper Value="10000"/>
                                            </domain:IsLessOrEqualValidationRule.ValueWrapper>
                                        </domain:IsLessOrEqualValidationRule>
                                        <domain:IsGreaterOrEqualValidationRule>
                                            <domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                                <domain:DoubleWrapper Value="0"/>
                                            </domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                        </domain:IsGreaterOrEqualValidationRule>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBox Grid.Column="1" Margin="0 0 10 0" materialDesign:HintAssist.Hint="BPM" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                 ToolTip="滑条播放时的BPM。">
                            <TextBox.Text>
                                <Binding Path="BeatsPerMinute" Mode="TwoWay" UpdateSourceTrigger="LostFocus" NotifyOnValidationError="True">
                                    <Binding.Converter>
                                        <domain:DoubleToStringConverter/>
                                    </Binding.Converter>
                                    <Binding.ValidationRules>
                                        <domain:IsGreaterValidationRule>
                                            <domain:IsGreaterValidationRule.ValueWrapper>
                                                <domain:DoubleWrapper Value="0"/>
                                            </domain:IsGreaterValidationRule.ValueWrapper>
                                        </domain:IsGreaterValidationRule>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBox Grid.Column="2" Margin="0" materialDesign:HintAssist.Hint="全局SV" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                 ToolTip="滑条播放时的全局滑条速度（SV）。">
                            <TextBox.Text>
                                <Binding Path="GlobalSv" Mode="TwoWay" UpdateSourceTrigger="LostFocus" NotifyOnValidationError="True">
                                    <Binding.Converter>
                                        <domain:DoubleToStringConverter/>
                                    </Binding.Converter>
                                    <Binding.ValidationRules>
                                        <domain:IsLessOrEqualValidationRule>
                                            <domain:IsLessOrEqualValidationRule.ValueWrapper>
                                                <domain:DoubleWrapper Value="3.6"/>
                                            </domain:IsLessOrEqualValidationRule.ValueWrapper>
                                        </domain:IsLessOrEqualValidationRule>
                                        <domain:IsGreaterOrEqualValidationRule>
                                            <domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                                <domain:DoubleWrapper Value="0.4"/>
                                            </domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                        </domain:IsGreaterOrEqualValidationRule>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </Grid>

                    <TextBox Margin="0 20 0 0" materialDesign:HintAssist.Hint="时间" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                             ToolTip="导出滑条在谱面中的时间。"
                             Text="{Binding ExportTime, Converter={StaticResource TimeToStringConverter}}"/>

                    <ComboBox Margin="0 10 0 0" ToolTip="选择导出方式。" ItemsSource="{Binding ExportModes}"
                              SelectedItem="{Binding ExportModeSetting}"/>

                    <RadioButton Content="导出滑条" Margin="0 10 0 0"
                                 GroupName="exportFormat"
                                 ToolTip="以普通滑条形式导出。"
                                 IsChecked="{Binding ExportAsNormal}"/>
                    <RadioButton Content="导出连打（stream）" Margin="0 0 0 0"
                                 GroupName="exportFormat"
                                 ToolTip="以连打形式导出。使用曲线图中的节拍细分来决定连打密度。"
                                 IsChecked="{Binding ExportAsStream}"/>
                    <RadioButton Content="导出隐形滑条" Margin="0 0 0 0"
                                 GroupName="exportFormat"
                                 ToolTip="使用 JPK314 提供的方法制作隐形滑条。该方法将用BPM改变替代SV改变。"
                                 IsChecked="{Binding ExportAsInvisibleSlider}"/>

                    <CheckBox x:Name="ManualSvBox" Content="手动选择新SV" Margin="0 10 0 5"
                              ToolTip="允许提供自定义SV给算法，优化生成的滑条。"
                              IsChecked="{Binding ManualVelocity}" Visibility="{Binding ExportAsNormal, Converter={StaticResource BooleanToVisibilityConverter}}">
                    </CheckBox>
                    <TextBox materialDesign:HintAssist.Hint="新SV" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="0 0 0 5"
                             ToolTip="生成滑条的新SV。SV影响程序运算。降低SV可以减少卡顿。"
                             IsEnabled="{Binding ManualVelocity}" Visibility="{Binding ExportAsNormal, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <TextBox.Text>
                            <Binding Path="NewVelocity" Mode="TwoWay" UpdateSourceTrigger="LostFocus"  NotifyOnValidationError="True">
                                <Binding.Converter>
                                    <domain:DoubleToStringConverter/>
                                </Binding.Converter>
                                <Binding.ValidationRules>
                                    <domain:IsGreaterOrEqualValidationRule>
                                        <domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                            <domain:DoubleWrapper Value="0"/>
                                        </domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                    </domain:IsGreaterOrEqualValidationRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBox materialDesign:HintAssist.Hint="最短堆积块长度" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                             ToolTip="用于降低滑条球速度的堆积块的最小长度。长堆积块可以减少卡顿，但滑条球会抖动得更加明显。"
                             Visibility="{Binding ExportAsNormal, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <TextBox.Text>
                            <Binding Path="MinDendrite" Mode="TwoWay" UpdateSourceTrigger="LostFocus"  NotifyOnValidationError="True">
                                <Binding.Converter>
                                    <domain:DoubleToStringConverter/>
                                </Binding.Converter>
                                <Binding.ValidationRules>
                                    <domain:IsLessOrEqualValidationRule>
                                        <domain:IsLessOrEqualValidationRule.ValueWrapper>
                                            <domain:DoubleWrapper Value="12"/>
                                        </domain:IsLessOrEqualValidationRule.ValueWrapper>
                                    </domain:IsLessOrEqualValidationRule>
                                    <domain:IsGreaterOrEqualValidationRule>
                                        <domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                            <domain:DoubleWrapper Value="1"/>
                                        </domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                    </domain:IsGreaterOrEqualValidationRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <StackPanel Orientation="Horizontal" Margin="0 10 0 0">
                        <TextBlock Text="预计分段数量："
                                   ToolTip="这是估算的分段数量。分段越多玩着越卡，请尽可能优化该值。"/>
                        <TextBlock Text="{Binding ExpectedSegments}"
                                   ToolTip="这是估算的分段数量。分段越多玩着越卡，请尽可能优化该值。"/>
                    </StackPanel>

                    <CheckBox x:Name="DelegateSvToBpmBox" Content="用BPM替代SV" Margin="0 15 0 0"
                              ToolTip="用BPM（红线）代替SV（绿线）来调节滑条速度，可以突破SV的10x上限。"
                              IsChecked="{Binding DelegateToBpm}" Visibility="{Binding ExportAsNormal, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <CheckBox Content="移除滑条点（slider tick）"
                              ToolTip="添加一个NaN绿线来移除滑条上的滑条点（slider tick）。"
                              IsChecked="{Binding RemoveSliderTicks}" Visibility="{Binding ExportAsNormal, Converter={StaticResource BooleanToVisibilityConverter}}"
                              IsEnabled="{Binding DelegateToBpm}"/>
                </StackPanel>
            </ScrollViewer>

            <Grid Grid.Row="1" Grid.Column="1" Margin="10 0 10 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Margin="8 0 8 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBox Grid.Column="0" Margin="0 0 8 0" HorizontalAlignment="Left"
                             materialDesign:HintAssist.Hint="SV限制" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                             MaxWidth="140" MinWidth="100"
                             ToolTip="限定最大SV，确保曲线图中的斜率不会超过此速度限制。比如设为10x来匹配osu!速度限制。"
                             Visibility="{Binding ExportAsNormal, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <TextBox.Text>
                            <Binding Path="VelocityLimit" Mode="TwoWay" Converter="{StaticResource DoubleToStringConverter}" ConverterParameter="10" UpdateSourceTrigger="LostFocus"  NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <domain:IsLessOrEqualValidationRule>
                                        <domain:IsLessOrEqualValidationRule.ValueWrapper>
                                            <domain:DoubleWrapper Value="100000"/>
                                        </domain:IsLessOrEqualValidationRule.ValueWrapper>
                                    </domain:IsLessOrEqualValidationRule>
                                    <domain:IsGreaterOrEqualValidationRule>
                                        <domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                            <domain:DoubleWrapper Value="0"/>
                                        </domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                    </domain:IsGreaterOrEqualValidationRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" Margin="0 0 5 0"
                                ToolTip="整体缩放曲线图。" Click="ScaleCompleteButton_OnClick">
                            <Button.Content>
                                <materialDesign:PackIcon Kind="RelativeScale" Width="24" Height="24"/>
                            </Button.Content>
                        </Button>
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" Margin="0 0 5 0"
                                ToolTip="重置曲线图。" Click="ClearButton_OnClick">
                            <Button.Content>
                                <materialDesign:PackIcon Kind="Rocket" Width="24" Height="24"/>
                            </Button.Content>
                        </Button>
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Margin="5 0 0 0"
                                ToolTip="切换曲线图模式。" Command="{Binding GraphToggleCommand}">
                            <Button.Content>
                                <Viewbox Width="24" Height="24">
                                    <TextBlock x:Name="GraphToggleContentTextBlock" FontWeight="Bold">V</TextBlock>
                                </Viewbox>
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </Grid>

                <Slider Grid.Row="1" Minimum="1" Maximum="16" Value="{Binding BeatSnapDivisor}" Style="{StaticResource MaterialDesignDiscreteSlider}"
                        ToolTip="节拍细分。" Margin="0 5 0 0"/>

                <ToolBarOverflowPanel HorizontalAlignment="Left" Grid.Row="2" Margin="5 10 5 0">
                    <CheckBox IsChecked="{Binding ShowRedAnchors}" Content="显示红色锚点" Margin="0 0 5 0"
                              ToolTip="在曲线图和预览图中显示红色锚点。"/>
                    <CheckBox IsChecked="{Binding ShowGraphAnchors}" Content="显示曲线图锚点"
                              ToolTip="在预览图中显示曲线图锚点。"/>
                </ToolBarOverflowPanel>
            </Grid>

            <Viewbox Grid.Row="1" Grid.Column="3" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="70">
                <Button
                    Style="{StaticResource MaterialDesignFloatingActionButton}"
                    IsEnabled="{Binding ElementName=This, Path=CanRun}"
                    Click="Start_Click"
                    ToolTip="运行该工具。">
                    <materialDesign:PackIcon
                        Kind="Play" Height="36" Width="36" />
                </Button>
            </Viewbox>
        </Grid>

        <Grid Name="SecondGrid" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <WrapPanel VerticalAlignment="Bottom">
                    <TextBlock TextWrapping="NoWrap" Text="由 OliBomby, Karoo, &amp; JPK314 制作" FontWeight="Bold" Opacity="0.58"/>
                </WrapPanel>
            </Grid>
            <Grid Grid.Column="1">
                <ProgressBar Value="{Binding ElementName=This, Path=Progress}" Margin="20,0,20,0" Height="20" Background="{x:Null}" BorderBrush="{x:Null}"/>
            </Grid>
        </Grid>
    </Grid>
</local:SingleRunMappingTool>
