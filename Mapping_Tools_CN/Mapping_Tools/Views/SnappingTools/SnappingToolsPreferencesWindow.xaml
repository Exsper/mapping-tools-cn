<Window x:Class="Mapping_Tools.Views.SnappingTools.SnappingToolsPreferencesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:components="clr-namespace:Mapping_Tools.Components.Domain"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:components1="clr-namespace:Mapping_Tools.Components"
        xmlns:serialization="clr-namespace:Mapping_Tools.Classes.Tools.SnappingTools.Serialization"
        mc:Ignorable="d"
        Title="Snapping Tools Preferences" Height="500" Width="570" MinWidth="575" MinHeight="360"
        WindowStyle="None"
        ResizeMode="CanResize"
        AllowsTransparency="False"
        WindowStartupLocation="CenterScreen"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" Background="{DynamicResource MaterialDesignPaper}"
        d:DataContext="{d:DesignData SnappingToolsPreferences}">

    <WindowChrome.WindowChrome>
        <WindowChrome 
            CaptionHeight="35"
            ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <components:EnumToBoolConverter x:Key="EnumToBoolConverter"/>
        <components:FlagToBoolConverter x:Key="FlagToBoolConverter"/>
        <components:DoubleToStringConverter x:Key="DoubleToStringConverter"/>
        <components:IntToStringConverter x:Key="IntToStringConverter"/>
        <components:ColorToStringConverter x:Key="ColorToStringConverter"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid x:Name="FirstGrid" Grid.Row="0">
            <StackPanel WindowChrome.IsHitTestVisibleInChrome="false" HorizontalAlignment="Left" Orientation="Horizontal">
                <materialDesign:ColorZone Width="24" Height="24" Margin="9,6,0,0" Mode="Inverted">
                    <materialDesign:ColorZone.OpacityMask>
                        <ImageBrush ImageSource="/Data/mt_logo_white_24.png"/>
                    </materialDesign:ColorZone.OpacityMask>
                </materialDesign:ColorZone>
                <TextBlock Name="Header" Text="全局选项" Foreground="{DynamicResource MaterialDesignBody}" Margin="8,11,0,0" FontWeight="Normal"/>
            </StackPanel>
            
            <StackPanel WindowChrome.IsHitTestVisibleInChrome="true" HorizontalAlignment="Right" Orientation="Horizontal">
                <Button Style="{DynamicResource MaterialDesignFlatButton}" Content="{materialDesign:PackIcon WindowCLose}" Click="CancelButton_Click" HorizontalAlignment="Right" Height="35" Foreground="{DynamicResource MaterialDesignBody}"/>
            </StackPanel>
        </Grid>

        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
            <Border Padding="10">
                <StackPanel>
                    <Border Padding="5 10">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Text="吸附键" VerticalAlignment="Bottom" Margin="0 0 0 6" 
                                           ToolTip="长按该键将光标吸附到最近的辅助物件上。"/>
                                <components1:HotkeyEditorControl Width="150" VerticalAlignment="Bottom" Hotkey="{Binding SnapHotkey, UpdateSourceTrigger=LostFocus}"
                                                                 ToolTip="长按该键将光标吸附到最近的辅助物件上。"/>
                                <TextBlock Width="100" Text="选取键" VerticalAlignment="Bottom" Margin="10 0 0 6" 
                                           ToolTip="按下或长按该键以选取辅助物件。"/>
                                <components1:HotkeyEditorControl Width="150" VerticalAlignment="Bottom" Hotkey="{Binding SelectHotkey, UpdateSourceTrigger=LostFocus}"
                                                                 ToolTip="按下或长按该键以选取辅助物件。"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Text="锁定键" VerticalAlignment="Bottom" Margin="0 0 0 6" 
                                           ToolTip="按下或长按该键以锁定辅助物件。"/>
                                <components1:HotkeyEditorControl Width="150" VerticalAlignment="Bottom" Hotkey="{Binding LockHotkey, UpdateSourceTrigger=LostFocus}"
                                                                 ToolTip="按下或长按该键以锁定辅助物件。"/>
                                <TextBlock Width="100" Text="启用键" VerticalAlignment="Bottom" Margin="10 0 0 6" 
                                           ToolTip="按下或长按该键以切换选中的辅助物件能否被生成器使用。"/>
                                <components1:HotkeyEditorControl Width="150" VerticalAlignment="Bottom" Hotkey="{Binding InheritHotkey, UpdateSourceTrigger=LostFocus}"
                                                                 ToolTip="按下或长按该键以切换选中的辅助物件能否被生成器使用。"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Text="刷新键" VerticalAlignment="Bottom" Margin="0 0 0 6"
                                           ToolTip="按下或长按该键以持续刷新根图层上的击打物件。"/>
                                <components1:HotkeyEditorControl Width="150" VerticalAlignment="Bottom" Hotkey="{Binding RefreshHotkey, UpdateSourceTrigger=LostFocus}"
                                                                 ToolTip="按下或长按该键以持续刷新根图层上的击打物件。"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="偏移" VerticalAlignment="Bottom" ToolTip="悬浮框（overlay box）的偏移。当自动转换编辑器坐标失败时使用该选项。启用Debug模式时显示悬浮框。"/>
                                <TextBox Text="{Binding OffsetLeft, Converter={StaticResource DoubleToStringConverter}}" Width="95" VerticalAlignment="Bottom" 
                                         materialDesign:HintAssist.Hint="左偏移" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="0 0 10 0"
                                         ToolTip="输入悬浮框的左侧偏移量。"/>
                                <TextBox Text="{Binding OffsetTop, Converter={StaticResource DoubleToStringConverter}}" Width="95" VerticalAlignment="Bottom" 
                                         materialDesign:HintAssist.Hint="上偏移" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="0 0 10 0"
                                         ToolTip="输入悬浮框的顶部偏移量。"/>
                                <TextBox Text="{Binding OffsetRight, Converter={StaticResource DoubleToStringConverter}}" Width="95" VerticalAlignment="Bottom" 
                                         materialDesign:HintAssist.Hint="右偏移" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="0 0 10 0"
                                         ToolTip="输入悬浮框的右侧偏移量。"/>
                                <TextBox Text="{Binding OffsetBottom, Converter={StaticResource DoubleToStringConverter}}" Width="95" VerticalAlignment="Bottom" 
                                         materialDesign:HintAssist.Hint="下偏移" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                         ToolTip="输入悬浮框的底部偏移量。"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="复杂度" VerticalAlignment="Bottom" 
                                           ToolTip="设置可使用多少个辅助物件图层。图层越多，生成辅助物件的递归次数越多。"/>
                                <TextBox Text="{Binding InceptionLevel, Converter={StaticResource IntToStringConverter}}" Width="120" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="启用层级" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                         ToolTip="设置可使用多少个辅助物件图层。图层越多，生成辅助物件的递归次数越多。推荐设置为2到10层。"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="按下" VerticalAlignment="Center"
                                           ToolTip="设置当吸附键按下时的显示。"/>
                                <ListBox SelectionMode="Extended" SelectionChanged="KeyDownViewModeSelector_OnSelectionChanged"
                                    Style="{StaticResource MaterialDesignToolToggleListBox}">
                                    <ListBoxItem ToolTip="所有物件" Tag="{x:Static serialization:ViewMode.Everything}" IsSelected="{Binding KeyDownViewMode, Mode=OneTime, Converter={StaticResource FlagToBoolConverter}, ConverterParameter={x:Static serialization:ViewMode.Everything}}">
                                        <materialDesign:PackIcon Kind="AllInclusive"/>
                                    </ListBoxItem>
                                    <ListBoxItem ToolTip="父物件和父物件的父物件" Tag="{x:Static serialization:ViewMode.Parents}" IsSelected="{Binding KeyDownViewMode, Mode=OneTime, Converter={StaticResource FlagToBoolConverter}, ConverterParameter={x:Static serialization:ViewMode.Parents}}">
                                        P
                                    </ListBoxItem>
                                    <ListBoxItem ToolTip="父物件" Tag="{x:Static serialization:ViewMode.DirectParents}" IsSelected="{Binding KeyDownViewMode, Mode=OneTime, Converter={StaticResource FlagToBoolConverter}, ConverterParameter={x:Static serialization:ViewMode.DirectParents}}">
                                        DP
                                    </ListBoxItem>
                                    <ListBoxItem ToolTip="子物件和子物件的子物件"  Tag="{x:Static serialization:ViewMode.Children}" IsSelected="{Binding KeyDownViewMode, Mode=OneTime, Converter={StaticResource FlagToBoolConverter}, ConverterParameter={x:Static serialization:ViewMode.Children}}">
                                        C
                                    </ListBoxItem>
                                    <ListBoxItem ToolTip="子物件"  Tag="{x:Static serialization:ViewMode.DirectChildren}" IsSelected="{Binding KeyDownViewMode, Mode=OneTime, Converter={StaticResource FlagToBoolConverter}, ConverterParameter={x:Static serialization:ViewMode.DirectChildren}}">
                                        DC
                                    </ListBoxItem>
                                </ListBox>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="未按下" VerticalAlignment="Center" 
                                           ToolTip="设置当吸附键未按下时的显示。"/>
                                <StackPanel>
                                    <RadioButton IsChecked="{Binding KeyUpViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:ViewMode.Everything}}"
                                                 Content="所有" ToolTip="默认行为。无论是否按下按键都总是显示所有辅助物件。"/>
                                    <RadioButton IsChecked="{Binding KeyUpViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:ViewMode.Nothing}}"
                                                 Content="无" ToolTip="当按下按键时才显示辅助物件。"/>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="选择" VerticalAlignment="Center" 
                                           ToolTip="设置用哪些物件生成辅助物件。"/>
                                <StackPanel>
                                    <RadioButton IsChecked="{Binding SelectedHitObjectMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:SelectedHitObjectMode.AllwaysAllVisible}}"
                                                 Content="所有可见的" ToolTip="使用可见的辅助物件，不考虑已选中的。"/>
                                    <RadioButton IsChecked="{Binding SelectedHitObjectMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:SelectedHitObjectMode.VisibleOrSelected}}"
                                                 Content="可见的或选取的" ToolTip="使用可见的和已选中的辅助物件。"/>
                                    <RadioButton IsChecked="{Binding SelectedHitObjectMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:SelectedHitObjectMode.OnlySelected}}"
                                                 Content="仅选取的" ToolTip="只使用已选择的辅助物件。"/>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="更新" VerticalAlignment="Center" 
                                           ToolTip="设置何时更新辅助物件。"/>
                                <StackPanel>
                                    <RadioButton IsChecked="{Binding UpdateMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:UpdateMode.AnyChange}}"
                                                 Content="任何改变" ToolTip="只要打击物件变动就更新。"/>
                                    <RadioButton IsChecked="{Binding UpdateMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:UpdateMode.TimeChange}}"
                                                 Content="时间变化" ToolTip="编辑器改变时间时更新。"/>
                                    <RadioButton IsChecked="{Binding UpdateMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:UpdateMode.OsuActivated}}"
                                                 Content="osu!获得焦点" ToolTip="osu!窗口从后台切入前台时更新。"/>
                                    <RadioButton IsChecked="{Binding UpdateMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:UpdateMode.HotkeyDown}}"
                                                 Content="按下快捷键" ToolTip="仅在按下刷新键时更新。"/>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="最小区分" VerticalAlignment="Bottom" 
                                           ToolTip="为减少混乱，合并相似辅助物件。该项设置避免两个物件合并的最小差别。"></TextBlock>
                                <TextBox Text="{Binding AcceptableDifference, Converter={StaticResource DoubleToStringConverter}}" Width="150" 
                                         VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="最小区分" 
                                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                         ToolTip="为减少混乱，合并相似辅助物件。该项设置避免两个物件合并的最小差别。"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="保持运行" VerticalAlignment="Center" 
                                           ToolTip="在打开其他工具时保持本工具在后台运行。"/>
                                <ToggleButton IsChecked="{Binding KeepRunning}" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                              ToolTip="在打开其他工具时保持本工具在后台运行。"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="显示游玩区域" VerticalAlignment="Center" 
                                           ToolTip="在悬浮框上显示游玩区域的边界。"/>
                                <ToggleButton IsChecked="{Binding VisiblePlayfieldBoundary}" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                              ToolTip="在悬浮框上显示游玩区域的边界。"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="Debug" VerticalAlignment="Center" 
                                           ToolTip="显示悬浮框的边界以便debug。"/>
                                <ToggleButton IsChecked="{Binding DebugEnabled}" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                              ToolTip="显示悬浮框的边界以便debug。"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                    
                    <ItemsControl ItemsSource="{Binding RelevantObjectPreferences}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <materialDesign:Card Margin="0 0 0 5">
                                    <Expander Header="{Binding Key}" Foreground="{DynamicResource MaterialDesignBody}">
                                        <StackPanel Margin="20">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBox Text="{Binding Color, ElementName=ColorPicker, Converter={StaticResource ColorToStringConverter}}"
                                                             Style="{StaticResource MaterialDesignFilledTextBox}" materialDesign:HintAssist.Hint="HEX值"
                                                             Width="100" Margin="2,0,10,2" Height="50" VerticalAlignment="Top"/>
                                                <materialDesign:ColorPicker Color="{Binding Value.Color}" x:Name="ColorPicker" Width="300" Height="100"/>
                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="不透明度" Width="120" VerticalAlignment="Center"/>
                                                <Slider x:Name="OpacitySlider" Width="300" TickFrequency="0.01" Orientation="Horizontal" Minimum="0" Maximum="1" Value="{Binding Value.Opacity, UpdateSourceTrigger=PropertyChanged}" Margin="5, 0" Style="{StaticResource MaterialDesignDiscreteSlider}"/>
                                                <TextBox x:Name="OpacityTextbox" Width="40" Text="{Binding ElementName=OpacitySlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="厚度" Width="120" VerticalAlignment="Center"/>
                                                <Slider x:Name="ThicknessSlider" Width="300" TickFrequency="1" Orientation="Horizontal" Minimum="1" Maximum="10" Value="{Binding Value.Thickness, UpdateSourceTrigger=PropertyChanged}" Margin="5, 0" Style="{StaticResource MaterialDesignDiscreteSlider}"/>
                                                <TextBox x:Name="ThicknessTextbox" Width="40" Text="{Binding ElementName=ThicknessSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="线形" Width="120" VerticalAlignment="Center"/>
                                                <ComboBox x:Name="DashStyleCombobox" Width="300" Margin="11,0" ItemsSource="{Binding Value.DashStylesEnumerable}" SelectedItem="{Binding Value.Dashstyle}"/>
                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal" Visibility="{Binding Value.HasSizeOption, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <TextBlock Text="大小" Width="120" VerticalAlignment="Center"/>
                                                <Slider x:Name="SizeSlider" Width="300" TickFrequency="1" Orientation="Horizontal" Minimum="1" Maximum="10" Value="{Binding Value.Size, UpdateSourceTrigger=PropertyChanged}" Margin="5, 0" Style="{StaticResource MaterialDesignDiscreteSlider}"/>
                                                <TextBox x:Name="SizeTextbox" Width="40" Text="{Binding ElementName=SizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </Expander>
                                </materialDesign:Card>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </Border>
        </ScrollViewer>


        <Border Grid.Row="2" Padding="10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Width="200" materialDesign:ButtonAssist.CornerRadius="10" x:Name="ApplyButton" Content="应用" Click="ApplyButton_Click"/>
                <Button Grid.Column="1" Width="200" materialDesign:ButtonAssist.CornerRadius="10" x:Name="CancelButton" Content="取消" Click="CancelButton_Click"/>
            </Grid>
        </Border>

        <Border BorderThickness="1" Grid.Row="0" Grid.RowSpan="3" Background="{x:Null}" BorderBrush="{DynamicResource PrimaryHueDarkBrush}"/>

    </Grid>

</Window>
